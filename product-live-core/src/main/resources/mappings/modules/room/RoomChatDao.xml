<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ofweek.live.core.modules.room.dao.RoomChatDao">
	
	<select id="get" resultType="RoomChat">
		SELECT
			*
		FROM live_room_chat
		WHERE id = #{id}
	</select>
	
	<select id="findList" resultType="RoomChat">
		SELECT
			chat.*,
			room.`name` AS 'room.name',
			user.`id` AS 'user.id',
			user.`type` AS 'user.type'
		FROM
			live_room_chat chat,
			live_room room,
			live_user user
		WHERE
			chat.room_id = room.id
		AND chat.send_by = user.id
		AND room.speaker_id = #{room.speakerId}
		<if test="roomId != null and roomId != ''">
			AND chat.room_id = #{roomId}
		</if>
		ORDER BY chat.create_date DESC
	</select>

	<select id="findRoomRange" resultType="RoomChat">
		SELECT
			*
		FROM live_room_chat
		WHERE room_id = #{roomId} AND type = 2 AND create_date &lt;= #{endTime}
		AND send_by NOT IN (
			SELECT user_id FROM live_room_blacklist WHERE room_id = #{roomId}
		)
		ORDER BY create_date DESC
		LIMIT #{offset}, #{limit}
	</select>
	
	<select id="findAllList" resultType="RoomChat">
		SELECT
			*
		FROM live_room_chat
		ORDER BY id DESC
	</select>
		
	<insert id="insert">
		INSERT INTO live_room_chat (
			id,
			room_id,
			send_by,
			content,
			type,
			create_date
		) VALUES (
			#{id},
			#{roomId},
			#{sendBy},
			#{content},
			#{type},
			#{createDate}
		)
	</insert>
	
	<update id="update">
		UPDATE live_room_chat
		<set>
			<if test="roomId != null">room_id = #{roomId},</if>
			<if test="sendBy != null">send_by = #{sendBy},</if>
			<if test="content != null">content = #{content},</if>
			<if test="type != null">type = #{type},</if>
			<if test="createDate != null">create_date = #{createDate},</if>
	    </set>
		WHERE
			id = #{id}
	</update>
	
	<update id="delete">
		DELETE FROM live_room_chat  
		WHERE id = #{id}
	</update>
	
	<select id="countRoomChatAudienceForRoomId" resultType="java.lang.Integer">
		SELECT
			COUNT(1)
		FROM
			(
				SELECT
					1
				FROM
					live_room_chat chat,
					live_audience audience,
					live_user user
				WHERE
					chat.send_by = audience.id
				AND user.id = audience.id
				AND user.type = 1
				AND audience.company NOT LIKE '%ofweek%'
				AND chat.room_id = #{roomId}
				GROUP BY
					user.id
			) A
	</select>
	
	<select id="findRoomChatForRoomId" resultType="RoomChat">
		SELECT
			*
		FROM
			live_room_chat
		WHERE
			room_id = #{roomId}
		AND send_by = #{userId}
		ORDER BY
			create_date DESC
	</select>
	
</mapper>